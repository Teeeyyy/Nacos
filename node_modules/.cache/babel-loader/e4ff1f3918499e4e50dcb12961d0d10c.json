{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Williams\\\\Desktop\\\\App\\\\choice-voting-app\\\\frontend\\\\src\\\\sections\\\\StartElection.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport \"../styles/startelect.css\";\nimport { URL } from \"../constants\";\nimport { useQuery } from \"react-query\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { BarLoader } from \"react-spinners\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst StartElection = () => {\n  _s();\n\n  const darkTheme = useSelector(state => state.status.darkTheme); // wallet-type & address\n\n  const walletAddress = localStorage.getItem(\"address\");\n  const headers = {\n    \"X-Wallet-Address\": walletAddress\n  };\n  const [myData, setMyData] = useState([]);\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery(\"elections\", () => {\n    if (walletAddress) {\n      axios.get(`${URL}/elections/mine`, {\n        headers\n      }).then(response => {\n        setMyData(response.data.data);\n        return response.data;\n      });\n    } else {\n      return null;\n    }\n  });\n  const isWalletConnected = localStorage.getItem(\"wallet-type\") === null ? false : true;\n  const dispatch = useDispatch();\n  if (isLoading) return \"Loading\";\n  if (true) return \"kuku\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stt_elt\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stt_elt_inn\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stt_hd\",\n        children: \"Recently Created Elections\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"on_elt\",\n        children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"100%\",\n            height: \"100px\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontWeight: \"500\",\n            color: \"var(--wht)\",\n            justifyContent: \"center\",\n            textTransform: \"uppercase\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              opacity: 0.5,\n              marginBottom: \"30px\"\n            },\n            children: \"Retrieving your Elections\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(BarLoader, {\n            color: darkTheme ? \"#eee\" : \"#555\",\n            loading: true,\n            size: 10,\n            speedMultiplier: 0.5\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this) : !!(myData.length > 0) ? myData === null || myData === void 0 ? void 0 : myData.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"elt_item\",\n            onClick: () => dispatch({\n              type: \"popupElection\",\n              payload: item\n            }),\n            style: {\n              borderBottom: index == 0 && \"var(--list-border)\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"elt_img_cont\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: item.process_image,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"elt_det\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"e_det_main\",\n                children: `${item.title}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"e_det_sub\",\n                children: `${!!item.description ? item.description : \"No description provided\"}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pop_butt\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"uil uil-ellipsis-v\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }, this)]\n          }, `${index}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: 1,\n              opacity: 0.7,\n              width: \"100%\",\n              display: \"flex\",\n              fontSize: \"14px\",\n              color: \"var(--wht)\",\n              letterSpacing: \"1px\",\n              alignItems: \"center\",\n              padding: \"10px 20px\",\n              textAlign: \"center\",\n              justifyContent: \"center\",\n              textTransform: \"uppercase\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                lineHeight: \"20px\"\n              },\n              children: \"Your Elections are displayed here once you connect your wallet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          width: \"100%\",\n          margin: \"20px 0px 30px\",\n          alignItems: \"center\",\n          flexDirection: \"column\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"uil uil-arrow-break\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stt_hd\",\n        children: \"do any of the following\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create_elect\",\n        children: // If Wallet is connected this would be true\n        !!isWalletConnected ? /*#__PURE__*/_jsxDEV(NavLink, {\n          style: {\n            width: \"100%\",\n            height: \"100%\",\n            textAlign: \"center\",\n            cursor: \"pointer\"\n          },\n          to: `./create`,\n          children: \"Create New Election\"\n        }, \"create\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"100%\",\n            height: \"100%\",\n            textAlign: \"center\",\n            cursor: \"pointer\"\n          },\n          onClick: () => {\n            dispatch({\n              type: \"modal_connect\"\n            });\n          },\n          children: \"Create New Election\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"participate_elt\",\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          style: {\n            width: \"100%\",\n            height: \"100%\",\n            textAlign: \"center\"\n          },\n          to: `../participate`,\n          children: \"Participate In Election\"\n        }, \"participate\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StartElection, \"EqhRAS0JHhr+f9eeE20upZCPXSo=\", false, function () {\n  return [useSelector, useQuery, useDispatch];\n});\n\n_c = StartElection;\nexport default StartElection;\n\nvar _c;\n\n$RefreshReg$(_c, \"StartElection\");","map":{"version":3,"sources":["C:/Users/Williams/Desktop/App/choice-voting-app/frontend/src/sections/StartElection.js"],"names":["axios","URL","useQuery","useDispatch","useSelector","NavLink","useState","BarLoader","StartElection","darkTheme","state","status","walletAddress","localStorage","getItem","headers","myData","setMyData","isLoading","error","data","get","then","response","isWalletConnected","dispatch","width","height","display","flexDirection","alignItems","fontWeight","color","justifyContent","textTransform","opacity","marginBottom","length","map","item","index","type","payload","borderBottom","process_image","title","description","flex","fontSize","letterSpacing","padding","textAlign","lineHeight","margin","cursor"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport \"../styles/startelect.css\";\r\nimport { URL } from \"../constants\";\r\nimport { useQuery } from \"react-query\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport { BarLoader } from \"react-spinners\";\r\n\r\nconst StartElection = () => {\r\n  const darkTheme = useSelector((state) => state.status.darkTheme);\r\n\r\n  // wallet-type & address\r\n  const walletAddress = localStorage.getItem(\"address\");\r\n\r\n  const headers = { \"X-Wallet-Address\": walletAddress };\r\n  const [myData, setMyData] = useState([]);\r\n\r\n  const { isLoading, error, data } = useQuery(\"elections\", () => {\r\n    if (walletAddress) {\r\n      axios.get(`${URL}/elections/mine`, { headers }).then((response) => {\r\n        setMyData(response.data.data);\r\n        return response.data;\r\n      });\r\n    } else {\r\n      return null;\r\n    }\r\n  });\r\n\r\n  const isWalletConnected =\r\n    localStorage.getItem(\"wallet-type\") === null ? false : true;\r\n  const dispatch = useDispatch();\r\n\r\n  if (isLoading) return \"Loading\";\r\n\r\n  if (true) return \"kuku\";\r\n  return (\r\n    <div className=\"stt_elt\">\r\n      <div className=\"stt_elt_inn\">\r\n        <div className=\"stt_hd\">Recently Created Elections</div>\r\n\r\n        <ul className=\"on_elt\">\r\n          {isLoading ? (\r\n            <div\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"100px\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n                fontWeight: \"500\",\r\n                color: \"var(--wht)\",\r\n                justifyContent: \"center\",\r\n                textTransform: \"uppercase\",\r\n              }}\r\n            >\r\n              <p style={{ opacity: 0.5, marginBottom: \"30px\" }}>\r\n                Retrieving your Elections\r\n              </p>\r\n\r\n              <BarLoader\r\n                color={darkTheme ? \"#eee\" : \"#555\"}\r\n                loading={true}\r\n                size={10}\r\n                speedMultiplier={0.5}\r\n              />\r\n            </div>\r\n          ) : !!(myData.length > 0) ? (\r\n            myData?.map((item, index) => {\r\n              return (\r\n                <li\r\n                  key={`${index}`}\r\n                  className=\"elt_item\"\r\n                  onClick={() =>\r\n                    dispatch({ type: \"popupElection\", payload: item })\r\n                  }\r\n                  style={{\r\n                    borderBottom: index == 0 && \"var(--list-border)\",\r\n                  }}\r\n                >\r\n                  <div className=\"elt_img_cont\">\r\n                    <img src={item.process_image} alt=\"\" />\r\n                  </div>\r\n                  <div className=\"elt_det\">\r\n                    <p className=\"e_det_main\">{`${item.title}`}</p>\r\n                    <p className=\"e_det_sub\">{`${\r\n                      !!item.description\r\n                        ? item.description\r\n                        : \"No description provided\"\r\n                    }`}</p>\r\n                  </div>\r\n                  <div className=\"pop_butt\">\r\n                    <i className=\"uil uil-ellipsis-v\"></i>\r\n                  </div>\r\n                </li>\r\n              );\r\n            })\r\n          ) : (\r\n            <>\r\n              <div\r\n                style={{\r\n                  flex: 1,\r\n                  opacity: 0.7,\r\n                  width: \"100%\",\r\n                  display: \"flex\",\r\n                  fontSize: \"14px\",\r\n                  color: \"var(--wht)\",\r\n                  letterSpacing: \"1px\",\r\n                  alignItems: \"center\",\r\n                  padding: \"10px 20px\",\r\n                  textAlign: \"center\",\r\n                  justifyContent: \"center\",\r\n                  textTransform: \"uppercase\",\r\n                }}\r\n              >\r\n                <p style={{ lineHeight: \"20px\" }}>\r\n                  Your Elections are displayed here once you connect your wallet\r\n                </p>\r\n              </div>\r\n            </>\r\n          )}\r\n        </ul>\r\n\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            width: \"100%\",\r\n            margin: \"20px 0px 30px\",\r\n            alignItems: \"center\",\r\n            flexDirection: \"column\",\r\n          }}\r\n        >\r\n          <i className=\"uil uil-arrow-break\"></i>\r\n        </div>\r\n\r\n        <div className=\"stt_hd\">do any of the following</div>\r\n        <div className=\"create_elect\">\r\n          {\r\n            // If Wallet is connected this would be true\r\n            !!isWalletConnected ? (\r\n              <NavLink\r\n                style={{\r\n                  width: \"100%\",\r\n                  height: \"100%\",\r\n                  textAlign: \"center\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n                to={`./create`}\r\n                key={\"create\"}\r\n              >\r\n                Create New Election\r\n              </NavLink>\r\n            ) : (\r\n              <div\r\n                style={{\r\n                  width: \"100%\",\r\n                  height: \"100%\",\r\n                  textAlign: \"center\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n                onClick={() => {\r\n                  dispatch({ type: \"modal_connect\" });\r\n                }}\r\n              >\r\n                Create New Election\r\n              </div>\r\n            )\r\n          }\r\n        </div>\r\n        <div className=\"participate_elt\">\r\n          <NavLink\r\n            style={{ width: \"100%\", height: \"100%\", textAlign: \"center\" }}\r\n            to={`../participate`}\r\n            key={\"participate\"}\r\n          >\r\n            Participate In Election\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StartElection;\r\n"]},"metadata":{},"sourceType":"module"}