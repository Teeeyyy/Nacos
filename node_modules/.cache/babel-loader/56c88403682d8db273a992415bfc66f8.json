{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Williams\\\\Desktop\\\\App\\\\choice-voting-app\\\\frontend\\\\src\\\\components\\\\Toggle.js\",\n    _s = $RefreshSig$();\n\nimport Switch from \"react-switch\";\nimport { useDispatch } from \"react-redux\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Toggle = ({\n  darkTheme\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [checked, setChecked] = useState(false);\n  useEffect(() => {\n    if (localStorage.getItem(\"mode\") == \"light\") {\n      setChecked(true);\n    }\n  }, []);\n\n  const handleChange = nextChecked => {\n    setChecked(nextChecked);\n\n    if (!darkTheme) {\n      localStorage.setItem(\"mode\", \"dark\");\n      dispatch({\n        type: \"dark_mode\"\n      });\n    } else {\n      localStorage.setItem(\"mode\", \"light\");\n      dispatch({\n        type: \"light_mode\"\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"small-radius-switch\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          width: \"0px\",\n          height: \"0px\",\n          overflow: \"hidden\"\n        },\n        children: \"Toggle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      checked: checked,\n      onChange: handleChange,\n      handleDiameter: 12,\n      offColor: \"#1a1a1a\",\n      onColor: \"#eee\",\n      offHandleColor: \"#0038ff\",\n      onHandleColor: \"#222\",\n      height: 16,\n      width: 46,\n      borderRadius: 50,\n      activeBoxShadow: \"0px 0px 1px 2px transparent\",\n      uncheckedIcon: /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false),\n      checkedIcon: /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false),\n      uncheckedHandleIcon: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: \" \"\n      }, void 0, false),\n      checkedHandleIcon: /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false),\n      className: \"react-switch\",\n      id: \"small-radius-switch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Toggle, \"O9mEpj6eXBI2y8jBvbodnBoOP5Y=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Toggle;\nexport default Toggle;\n\nvar _c;\n\n$RefreshReg$(_c, \"Toggle\");","map":{"version":3,"sources":["C:/Users/Williams/Desktop/App/choice-voting-app/frontend/src/components/Toggle.js"],"names":["Switch","useDispatch","useState","useEffect","Toggle","darkTheme","dispatch","checked","setChecked","localStorage","getItem","handleChange","nextChecked","setItem","type","width","height","overflow"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,cAAnB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAAA;;AAChC,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AAEA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,KAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,YAAY,CAACC,OAAb,CAAqB,MAArB,KAAgC,OAApC,EAA6C;AAC3CF,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMG,YAAY,GAAIC,WAAD,IAAiB;AACpCJ,IAAAA,UAAU,CAACI,WAAD,CAAV;;AAEA,QAAI,CAACP,SAAL,EAAgB;AACdI,MAAAA,YAAY,CAACI,OAAb,CAAqB,MAArB,EAA6B,MAA7B;AACAP,MAAAA,QAAQ,CAAC;AAAEQ,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACD,KAHD,MAGO;AACLL,MAAAA,YAAY,CAACI,OAAb,CAAqB,MAArB,EAA6B,OAA7B;AACAP,MAAAA,QAAQ,CAAC;AAAEQ,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACD;AACF,GAVD;;AAYA,sBACE;AAAA,4BACE;AAAO,MAAA,OAAO,EAAC,qBAAf;AAAA,6BACE;AAAG,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE,KAAT;AAAgBC,UAAAA,MAAM,EAAE,KAAxB;AAA+BC,UAAAA,QAAQ,EAAE;AAAzC,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,MAAD;AACE,MAAA,OAAO,EAAEV,OADX;AAEE,MAAA,QAAQ,EAAEI,YAFZ;AAGE,MAAA,cAAc,EAAE,EAHlB;AAIE,MAAA,QAAQ,EAAC,SAJX;AAKE,MAAA,OAAO,EAAC,MALV;AAME,MAAA,cAAc,EAAC,SANjB;AAOE,MAAA,aAAa,EAAC,MAPhB;AAQE,MAAA,MAAM,EAAE,EARV;AASE,MAAA,KAAK,EAAE,EATT;AAUE,MAAA,YAAY,EAAE,EAVhB;AAWE,MAAA,eAAe,EAAC,6BAXlB;AAYE,MAAA,aAAa,eAAE,qCAZjB;AAaE,MAAA,WAAW,eAAE,qCAbf;AAcE,MAAA,mBAAmB,eAAE;AAAA;AAAA,uBAdvB;AAeE,MAAA,iBAAiB,eAAE,qCAfrB;AAgBE,MAAA,SAAS,EAAC,cAhBZ;AAiBE,MAAA,EAAE,EAAC;AAjBL;AAAA;AAAA;AAAA;AAAA,YANF;AAAA,kBADF;AA4BD,CAnDD;;GAAMP,M;UACaH,W;;;KADbG,M;AAqDN,eAAeA,MAAf","sourcesContent":["import Switch from \"react-switch\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst Toggle = ({ darkTheme }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [checked, setChecked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"mode\") == \"light\") {\r\n      setChecked(true);\r\n    }\r\n  }, []);\r\n\r\n  const handleChange = (nextChecked) => {\r\n    setChecked(nextChecked);\r\n\r\n    if (!darkTheme) {\r\n      localStorage.setItem(\"mode\", \"dark\");\r\n      dispatch({ type: \"dark_mode\" });\r\n    } else {\r\n      localStorage.setItem(\"mode\", \"light\");\r\n      dispatch({ type: \"light_mode\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <label htmlFor=\"small-radius-switch\">\r\n        <p style={{ width: \"0px\", height: \"0px\", overflow: \"hidden\" }}>\r\n          Toggle\r\n        </p>\r\n      </label>\r\n      <Switch\r\n        checked={checked}\r\n        onChange={handleChange}\r\n        handleDiameter={12}\r\n        offColor=\"#1a1a1a\"\r\n        onColor=\"#eee\"\r\n        offHandleColor=\"#0038ff\"\r\n        onHandleColor=\"#222\"\r\n        height={16}\r\n        width={46}\r\n        borderRadius={50}\r\n        activeBoxShadow=\"0px 0px 1px 2px transparent\"\r\n        uncheckedIcon={<></>}\r\n        checkedIcon={<></>}\r\n        uncheckedHandleIcon={<> </>}\r\n        checkedHandleIcon={<></>}\r\n        className=\"react-switch\"\r\n        id=\"small-radius-switch\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Toggle;\r\n"]},"metadata":{},"sourceType":"module"}